#include <WiFi.h>
#include <PubSubClient.h>

// WiFi credentials
const char* ssid = "NETHI";
const char* password = "nethaki2001";

// MQTT broker
const char* mqtt_server = "192.168.253.170"; 
const char* moistureTopic = "garden/moisture";
const char* controlTopic = "garden/control";

// GPIO pins
const int sensorPin = 34;     
const int relayPin = 23;      
const int redLED = 18;
const int greenLED = 19;

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  delay(10);
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi connected!");
}

void callback(char* topic, byte* payload, unsigned int length) {
  String message;
  for (int i = 0; i < length; i++) {
    message += (char)payload[i];
  }
  if (String(topic) == controlTopic) {
    if (message == "ON") {
      digitalWrite(relayPin, LOW); // active LOW relay
    } else if (message == "OFF") {
      digitalWrite(relayPin, HIGH);
    }
  }
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    if (client.connect("ESP32Client")) {
      client.subscribe(controlTopic);
    } else {
      Serial.print("Failed. Retry in 5s");
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  pinMode(relayPin, OUTPUT);
  pinMode(redLED, OUTPUT);
  pinMode(greenLED, OUTPUT);
  digitalWrite(relayPin, HIGH); // off by default

  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  int moisture = analogRead(sensorPin);
  Serial.print("Moisture: ");
  Serial.println(moisture);

  String moistureStr = String(moisture);
  client.publish(moistureTopic, moistureStr.c_str());

  if (moisture < 2000) { // adjust threshold based on sensor
    digitalWrite(relayPin, LOW);
    digitalWrite(redLED, HIGH);
    digitalWrite(greenLED, LOW);
  } else {
    digitalWrite(relayPin, HIGH);
    digitalWrite(redLED, LOW);
    digitalWrite(greenLED, HIGH);
  }

  delay(5000); // check every 5 seconds
}
